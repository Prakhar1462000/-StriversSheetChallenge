#include <bits/stdc++.h> 
long long mergeall(long long* arr,long long* temp,int start,int end,int mid)
{
    long long c=0;
    int i=start;
    int j=mid+1;
    int k=start;

    while(i<=mid && j<=end)
    {
        if(arr[i] <= arr[j])
        {
            temp[k++]=arr[i++];
        }
        else
        {
            temp[k++]=arr[j++];
            c+=mid-i+1;
        }
    }
    while(i<=mid)
    {
        temp[k++]=arr[i];
        i++;
    }
    while(j<=end)
    {
        temp[k++]=arr[j];
        j++;
    }
    while(start<=end)
    {
        arr[start]=temp[start];
        ++start;
    }
    return c;
}
long long mergesort(long long* arr,long long* temp,int start,int end)
{
    if(start >= end )
    {
        return 0;
    }
    long long c=0;
    int mid=start+(end-start)/2;
    c+=mergesort(arr,temp,start,mid);
    c+=mergesort(arr,temp,mid+1,end);
    c+=mergeall(arr,temp,start,end,mid);
    return c;
}

long long getInversions(long long *arr, int n)
{
    // Write your code here.
    int start=0;
    int end=n-1;
    long long temp[n];
    long long c=mergesort(arr,temp,start,end);
    return c;
}
