#include<bits/stdc++.h>
int solve(int n, int last, vector<int> &rack, vector<vector<int>>&dp){
   if(n<0)return 0;
   if(dp[n][last]!=-1)return dp[n][last];
   
   int pick = 0;
   if(rack[n]<last) pick = rack[n]+solve(n-1,rack[n],rack,dp);
   int notPick = solve(n-1,last,rack,dp);
   
   return dp[n][last] = max(pick,notPick);
}
int maxIncreasingDumbbellsSum(vector<int> &rack, int n)
{
  int maxi = *max_element(rack.begin(),rack.end());
  vector<vector<int>>dp(n,vector<int>(maxi+2,-1));
  return solve(n-1,maxi+1,rack,dp);
}
