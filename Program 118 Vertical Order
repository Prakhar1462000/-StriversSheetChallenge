#include <bits/stdc++.h> 
/************************************************************

Following is the Binary Tree node class
    
template <typename T = int>
class TreeNode
{
public:
    T data;
    TreeNode<T> *left;
    TreeNode<T> *right;

    TreeNode(T val)
    {
        this->data = val;
        left = NULL;
        right = NULL;
    }

    ~TreeNode()
    {
        if (left != NULL)
        {
            delete left;
        }
        if (right != NULL)
        {
            delete right;
        }
    }
};

************************************************************/

vector<int> verticalOrderTraversal(TreeNode<int> *root)
{
    //    Write your code here.
    queue<pair<TreeNode<int>*,pair<int,int>>>q;
    q.push({root, {0, 0}});
    map<int,map<int,vector<int>>>mp;
    while(!q.empty())
    {
        auto front=q.front();
        q.pop();
        TreeNode<int> *node=front.first;
        auto coordinate=front.second;
        int &row=coordinate.first;
        int &column=coordinate.second;
        mp[column][row].push_back(node->data);
        if(node->left)
        {
          q.push({node->left, {row + 1, column - 1}});
        }
        if(node->right)
        {
          q.push({node->right, {row + 1, column + 1}});
        }
    }
    vector<int> answer;
    for(auto it:mp)
    {
        auto &colmap=it.second;
        for(auto colmapit:colmap)
        {
            auto &mset=colmapit.second;
            answer.insert(answer.end(),mset.begin(),mset.end());
        }
    }
    return answer;
}
