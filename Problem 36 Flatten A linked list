/*
 * Definition for linked list.
 * class Node {
 *  public:
 *		int data;
 *		Node *next;
 * 		Node *child;
 *		Node() : data(0), next(nullptr), child(nullptr){};
 *		Node(int x) : data(x), next(nullptr), child(nullptr) {}
 *		Node(int x, Node *next, Node *child) : data(x), next(next), child(child) {}
 * };
 */

Node* merge(Node* a,Node* b)
{
	if(!a)
	{
		return b;
	}
	if(!b)
	{
		return a;
	}
	Node* temp=NULL;
		if(a->data < b->data)
		{
			temp=a;
			a->child=merge(a->child,b);
		}
		else
		{
			temp=b;
			b->child=merge(a,b->child);
		}
	return temp;
}

Node* flattenLinkedList(Node* head) 
{
	// Write your code here
	if(!head)
	{
		return NULL;
	}
	Node* merger=merge(head,flattenLinkedList(head->next));
	return merger;
}
