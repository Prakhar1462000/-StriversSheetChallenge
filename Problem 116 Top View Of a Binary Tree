#include <bits/stdc++.h> 
#include <utility>
using namespace std;
/************************************************************

    Following is the TreeNode class structure:

    template <typename T>
    class TreeNode {
       public:
        T val;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T val) {
            this->val = val;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/

vector<int> getTopView(TreeNode<int> *root)
{
    // Write your code here.
    vector<int> ans;
    if(root == NULL) return ans;
     map<int,int> mp;
    queue<pair<TreeNode<int>*, int>> q;
    q.push(make_pair(root, 0));
    while(!q.empty())
    {
        pair<TreeNode<int>*, int> temp=q.front();
        q.pop();

        if(mp.find(temp.second) == mp.end())
        {
            mp[temp.second]=temp.first->val;
        }
        if(temp.first->left != NULL)
        {
            q.push(make_pair(temp.first->left,temp.second-1));
        }
        if(temp.first->right != NULL)
        {
            q.push(make_pair(temp.first->right,temp.second+1));
        }
    }
    for(auto i:mp)
    {
        ans.push_back(i.second);
    }
}
