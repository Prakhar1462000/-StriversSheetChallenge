#include <bits/stdc++.h> 
/*************************************************************
 
    Following is the Binary Tree node structure.

    class BinaryTreeNode 
    {
    public : 
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> bottomView(BinaryTreeNode<int> * root)
{
    // Write your code here.
    vector<int> ans;
    if(root == NULL)
    {
        return ans;
    }
    map<int,int>mp;
    queue<pair<BinaryTreeNode<int>*,int>>q;
    q.push(make_pair(root,0));
    while(!q.empty())
    {
        pair<BinaryTreeNode<int>*,int> temp=q.front();
        q.pop();
        BinaryTreeNode<int>* curr=temp.first;
        int hd=temp.second;
        mp[hd]=temp.first->data;
        if(curr->left != NULL)
        {
            q.push(make_pair(curr->left,hd-1));
        }
        if(curr->right != NULL)
        {
            q.push(make_pair(curr->right,hd+1));
        }
    }
    for(auto it:mp)
    {
        ans.push_back(it.second);
    }
    return ans;
    
}
