#include <bits/stdc++.h>
int solve(string& str1, string& str2,int i,int j,vector<vector<int>>& dp)
{
    if(i == str1.length())
    {
        return str2.length()-j;
    }
    if(j == str2.length())
    {
        return str1.length()-i;
    }
    if(dp[i][j] != -1)
    {
        return dp[i][j];
    }
    int ans=0;
    if(str1[i] == str2[j])
    {
       ans=solve(str1,str2,i+1,j+1,dp);
    }
    else
    {
    int insert=1+solve(str1,str2,i,j+1,dp);
    int del=1+solve(str1,str2,i+1,j,dp);
    int replace=1+solve(str1,str2,i+1,j+1,dp);
    ans=min(insert,min(replace,del));
    }
    dp[i][j]=ans;
    return dp[i][j];

}
int editDistance(string str1, string str2)
{
    //write you code here
    int m=str1.length();
    int n=str2.length();
    vector<vector<int>> dp(m,vector<int>(n,-1));
    if(str1.length() == 0)
    {
        return str2.length();
    }
    if(str2.length() == 0)
    {
        return str1.length();
    }
    int i=0;
    int j=0;
    return solve(str1,str2,i,j,dp);
}
